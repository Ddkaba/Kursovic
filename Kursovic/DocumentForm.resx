<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>